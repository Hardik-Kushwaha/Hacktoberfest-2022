#include <bits/stdc++.h>

using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};
 

bool fun(TreeNode* root , int sum , int k) {
    if(root == NULL) return false;
    if(root -> left == NULL && root -> right == NULL) {
        if(sum + root -> val == k) return true;
        return false;
    }
    if(fun(root -> left , sum + root -> val , k) || fun(root -> right , sum + root -> val , k)) return true;
    return false;
}

bool hasPathSum(TreeNode* root, int k) {
    int sum = 0;
    return fun(root , sum , k);
}

int main() {
    
    TreeNode* node = new TreeNode(5);
    node -> left = new TreeNode(1);
    node -> right = new TreeNode(2);
        

    cout<<hasPathSum(node , 3)<<endl;
    return 0;
}
